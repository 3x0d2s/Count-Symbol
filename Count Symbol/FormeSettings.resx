<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>